  func.func private @printMemrefF32(memref<*xf32>) attributes { llvm.emit_c_interface }

  func.func @main() {
    %c0 = arith.constant 0 : i32
    %c4 = arith.constant 4.00000e+00 : f32
    %c7 = arith.constant 7.00000e+00 : f16
    %arg2 = memref.alloc() : memref<1024xf32>
    %arg3 = memref.alloc() : memref<128x256xf16>

    call @kernel(%c4, %c7, %arg2, %arg3, %c0, %c0, %c0) : (f32, f16, memref<1024xf32>, memref<128x256xf16>, i32, i32, i32) -> ()
    
    %arg2_res = memref.cast %arg2 : memref<1024xf32> to memref<*xf32>
    call @printMemrefF32(%arg2_res): (memref<*xf32>) -> ()
// X86: rank = 1 offset = 0 sizes = [1024] strides = [1]
// X86: [4,  4,  4,  4,  4,  4,  4,  4,  4,

    memref.dealloc %arg2 : memref<1024xf32>
    memref.dealloc %arg3 : memref<128x256xf16>
    return
  }
  